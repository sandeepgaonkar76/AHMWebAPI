sudo apt-get install git
git clone https://github.com/sandeepgaonkar76/AHMWebAPI.git

git pull https://github.com/sandeepgaonkar76/AHMWebAPI.git
git pull https://github.com/sandeepgaonkar76/AHMReactApp.git

Install Docker
sudo apt-get update

systemctl start docker

docker build -tag ahmwebapi:latest AHMWebAPI/Dockerfile .

docker build -t ahmwebapi -f AHMWebAPI/Dockerfile .
docker build -t ahmwebapi -f SampleWebAPI/Dockerfile .

docker tag ahmwebapi gcr.io/emids-coe/ahmwebapi
docker push gcr.io/emids-coe/ahmwebapi

curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-418.0.0-linux-x86_64.tar.gz

gcloud services enable containerregistry.googleapis.com

gcloud auth configure-docker


appengine
dotnet restore
dotnet publish -c Release

gcloud app deploy bin/Release/netcoreapp3.1/publish/app.yaml
gcloud app deploy .\bin\Release\net5.0\publish\app.yaml

cat bin/Release/netcoreapp3.1/publish/app.yaml

app.yaml

runtime: aspnetcore
env: flex

# This sample incurs costs to run on the App Engine flexible environment. 
# The settings below are to reduce costs during testing and are not appropriate
# for production use. For more information, see:
# https://cloud.google.com/appengine/docs/flexible/python/configuring-your-app-with-app-yaml
manual_scaling:
  instances: 1
resources:
  cpu: 1
  memory_gb: 0.5
  disk_size_gb: 10

env_variables:
  # The __ in My__Greeting will be translated to a : by ASP.NET.
  My__Greeting: Hello AppEngine!





GKE Cluster
https://medium.com/techbull/gke-cluster-with-gcloud-utility-for-dummies-5e42bf01b739

gcloud container clusters create sample-cluster


gcloud container clusters create ahmcluster --machine-type n1-standard-2 --num-nodes 2 --zone us-central1-c

gcloud container clusters get-credentials ahmcluster --zone us-central1-c --project emids-coe
gcr.io/emids-coe/ahmwebapi:latest
gcr.io/emids-coe/ahmwebapi:latest
kubectl create deployment ahmcluster  --image=gcr.io/emids-coe/ahmwebapi:latest

kubectl get pods -o wide

kubectl get deployment

kubectl expose deployment ahmcluster  --type=LoadBalancer --port=8080

kubectl get services --watch





ReactJS
34.160.98.50.nip.io
